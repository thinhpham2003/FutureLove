//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import RswiftResources
import UIKit

private class BundleFinder {}
let R = _R(bundle: Bundle(for: BundleFinder.self))

struct _R {
  let bundle: Foundation.Bundle
  var color: color { .init(bundle: bundle) }
  var image: image { .init(bundle: bundle) }
  var info: info { .init(bundle: bundle) }
  var font: font { .init(bundle: bundle) }
  var file: file { .init(bundle: bundle) }
  var nib: nib { .init(bundle: bundle) }
  var storyboard: storyboard { .init(bundle: bundle) }

  func color(bundle: Foundation.Bundle) -> color {
    .init(bundle: bundle)
  }
  func image(bundle: Foundation.Bundle) -> image {
    .init(bundle: bundle)
  }
  func info(bundle: Foundation.Bundle) -> info {
    .init(bundle: bundle)
  }
  func font(bundle: Foundation.Bundle) -> font {
    .init(bundle: bundle)
  }
  func file(bundle: Foundation.Bundle) -> file {
    .init(bundle: bundle)
  }
  func nib(bundle: Foundation.Bundle) -> nib {
    .init(bundle: bundle)
  }
  func storyboard(bundle: Foundation.Bundle) -> storyboard {
    .init(bundle: bundle)
  }
  func validate() throws {
    try self.font.validate()
    try self.nib.validate()
    try self.storyboard.validate()
  }

  struct project {
    let developmentRegion = "en"
  }

  /// This `_R.color` struct is generated, and contains static references to 5 colors.
  struct color {
    let bundle: Foundation.Bundle

    /// Color `AccentColor`.
    var accentColor: RswiftResources.ColorResource { .init(name: "AccentColor", path: [], bundle: bundle) }

    /// Color `hiden`.
    var hiden: RswiftResources.ColorResource { .init(name: "hiden", path: [], bundle: bundle) }

    /// Color `main.disable`.
    var mainDisable: RswiftResources.ColorResource { .init(name: "main.disable", path: [], bundle: bundle) }

    /// Color `mainOrange`.
    var mainOrange: RswiftResources.ColorResource { .init(name: "mainOrange", path: [], bundle: bundle) }

    /// Color `tabbar`.
    var tabbar: RswiftResources.ColorResource { .init(name: "tabbar", path: [], bundle: bundle) }
  }

  /// This `_R.image` struct is generated, and contains static references to 142 images.
  struct image {
    let bundle: Foundation.Bundle

    /// Image `ARE YOU IN LOVE OR ARE YOU MARRIED_ WHAT WILL YOUR CHILDREN LOOK LIKE_`.
    var areyouinloveorareyoumarried_WHATWILLYOURCHILDRENLOOKLIKE_: RswiftResources.ImageResource { .init(name: "ARE YOU IN LOVE OR ARE YOU MARRIED_ WHAT WILL YOUR CHILDREN LOOK LIKE_", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `CLICK NOW BUT LOOK YOUR CHILD IN THE FUTURE`.
    var clicknowbutlookyourchildinthefuturE: RswiftResources.ImageResource { .init(name: "CLICK NOW BUT LOOK YOUR CHILD IN THE FUTURE", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Choose Your Image`.
    var chooseYourImage: RswiftResources.ImageResource { .init(name: "Choose Your Image", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Confirm password`.
    var confirmPassword: RswiftResources.ImageResource { .init(name: "Confirm password", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Contact us`.
    var contactUs: RswiftResources.ImageResource { .init(name: "Contact us", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Convert two videos posted from you`.
    var convertTwoVideosPostedFromYou: RswiftResources.ImageResource { .init(name: "Convert two videos posted from you", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Designer (1) 2`.
    var designer12: RswiftResources.ImageResource { .init(name: "Designer (1) 2", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Ellipse 209`.
    var ellipse209: RswiftResources.ImageResource { .init(name: "Ellipse 209", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Ellipse 24`.
    var ellipse24: RswiftResources.ImageResource { .init(name: "Ellipse 24", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Ellipse 25`.
    var ellipse25: RswiftResources.ImageResource { .init(name: "Ellipse 25", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Frame 48097542`.
    var frame48097542: RswiftResources.ImageResource { .init(name: "Frame 48097542", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Frame 48097545`.
    var frame48097545: RswiftResources.ImageResource { .init(name: "Frame 48097545", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Frame 48097546`.
    var frame48097546: RswiftResources.ImageResource { .init(name: "Frame 48097546", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Frame 48097905`.
    var frame48097905: RswiftResources.ImageResource { .init(name: "Frame 48097905", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Frame 48097906`.
    var frame48097906: RswiftResources.ImageResource { .init(name: "Frame 48097906", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Frame 48097907`.
    var frame48097907: RswiftResources.ImageResource { .init(name: "Frame 48097907", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Frame 48097939`.
    var frame48097939: RswiftResources.ImageResource { .init(name: "Frame 48097939", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Have more 200 template, change your mind now with unique videos`.
    var haveMore200TemplateChangeYourMindNowWithUniqueVideos: RswiftResources.ImageResource { .init(name: "Have more 200 template, change your mind now with unique videos", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Image`.
    var image: RswiftResources.ImageResource { .init(name: "Image", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Image (1)`.
    var image1: RswiftResources.ImageResource { .init(name: "Image (1)", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Image (2)`.
    var image2: RswiftResources.ImageResource { .init(name: "Image (2)", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `LET'S ANALYZE YOUR LOVE WITH ARTIFICIAL INTELLIGENCE`.
    var letsanalyzeyourlovewithartificialintelligencE: RswiftResources.ImageResource { .init(name: "LET'S ANALYZE YOUR LOVE WITH ARTIFICIAL INTELLIGENCE", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Log in`.
    var logIn: RswiftResources.ImageResource { .init(name: "Log in", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Love-Predictions`.
    var lovePredictions: RswiftResources.ImageResource { .init(name: "Love-Predictions", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `MORE`.
    var morE: RswiftResources.ImageResource { .init(name: "MORE", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Plus_Icon_UIA`.
    var plus_Icon_UIA: RswiftResources.ImageResource { .init(name: "Plus_Icon_UIA", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Rectangle 22`.
    var rectangle22: RswiftResources.ImageResource { .init(name: "Rectangle 22", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Rectangle 4970`.
    var rectangle4970: RswiftResources.ImageResource { .init(name: "Rectangle 4970", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Rectangle 4971`.
    var rectangle4971: RswiftResources.ImageResource { .init(name: "Rectangle 4971", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Rectangle 5046`.
    var rectangle5046: RswiftResources.ImageResource { .init(name: "Rectangle 5046", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Rectangle 5047`.
    var rectangle5047: RswiftResources.ImageResource { .init(name: "Rectangle 5047", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Rectangle 5048`.
    var rectangle5048: RswiftResources.ImageResource { .init(name: "Rectangle 5048", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Rectangle 5049`.
    var rectangle5049: RswiftResources.ImageResource { .init(name: "Rectangle 5049", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Rectangle 5050`.
    var rectangle5050: RswiftResources.ImageResource { .init(name: "Rectangle 5050", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Rectangle 5089`.
    var rectangle5089: RswiftResources.ImageResource { .init(name: "Rectangle 5089", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Rectangle 5093`.
    var rectangle5093: RswiftResources.ImageResource { .init(name: "Rectangle 5093", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Rectangle 5094`.
    var rectangle5094: RswiftResources.ImageResource { .init(name: "Rectangle 5094", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Rectangle 59`.
    var rectangle59: RswiftResources.ImageResource { .init(name: "Rectangle 59", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Rectangle 60`.
    var rectangle60: RswiftResources.ImageResource { .init(name: "Rectangle 60", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Rectangle 61`.
    var rectangle61: RswiftResources.ImageResource { .init(name: "Rectangle 61", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Rectangle 62`.
    var rectangle62: RswiftResources.ImageResource { .init(name: "Rectangle 62", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Rectangle 63`.
    var rectangle63: RswiftResources.ImageResource { .init(name: "Rectangle 63", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Rectangle 64`.
    var rectangle64: RswiftResources.ImageResource { .init(name: "Rectangle 64", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `START`.
    var starT: RswiftResources.ImageResource { .init(name: "START", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `SWAP IMAgE WITH VIDEO`.
    var swapimAgEWITHVIDEO: RswiftResources.ImageResource { .init(name: "SWAP IMAgE WITH VIDEO", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `SWAP ONE IMAGE WITH TEMPLATE`.
    var swaponeimagewithtemplatE: RswiftResources.ImageResource { .init(name: "SWAP ONE IMAGE WITH TEMPLATE", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `SWAP ONE IMAGE WITH VIDEO TEMPALE`.
    var swaponeimagewithvideotempalE: RswiftResources.ImageResource { .init(name: "SWAP ONE IMAGE WITH VIDEO TEMPALE", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Success. Here is your video!`.
    var successHereIsYourVideo: RswiftResources.ImageResource { .init(name: "Success. Here is your video!", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Swap Video`.
    var swapVideo: RswiftResources.ImageResource { .init(name: "Swap Video", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Template3`.
    var template3: RswiftResources.ImageResource { .init(name: "Template3", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Tinder’s new $500 feature gives the green light to harassment – if you can afford it`.
    var tinderSNew500FeatureGivesTheGreenLightToHarassmentIfYouCanAffordIt: RswiftResources.ImageResource { .init(name: "Tinder’s new $500 feature gives the green light to harassment – if you can afford it", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Untitled-1 1`.
    var untitled11: RswiftResources.ImageResource { .init(name: "Untitled-1 1", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Video Template`.
    var videoTemplate: RswiftResources.ImageResource { .init(name: "Video Template", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Video hot trade`.
    var videoHotTrade: RswiftResources.ImageResource { .init(name: "Video hot trade", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `WHAT WILL YOUR LOVE BE LIKE IN THE FUTURE _`.
    var whatwillyourlovebelikeinthefuture_: RswiftResources.ImageResource { .init(name: "WHAT WILL YOUR LOVE BE LIKE IN THE FUTURE _", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `What will your face if in the video but you want`.
    var whatWillYourFaceIfInTheVideoButYouWant: RswiftResources.ImageResource { .init(name: "What will your face if in the video but you want", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Your Image`.
    var yourImage: RswiftResources.ImageResource { .init(name: "Your Image", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Your Image 2`.
    var yourImage2: RswiftResources.ImageResource { .init(name: "Your Image 2", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Your Video`.
    var yourVideo: RswiftResources.ImageResource { .init(name: "Your Video", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `addEvent`.
    var addEvent: RswiftResources.ImageResource { .init(name: "addEvent", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `back`.
    var back: RswiftResources.ImageResource { .init(name: "back", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `backbutton`.
    var backbutton: RswiftResources.ImageResource { .init(name: "backbutton", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `backgroudLogin`.
    var backgroudLogin: RswiftResources.ImageResource { .init(name: "backgroudLogin", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `background`.
    var background: RswiftResources.ImageResource { .init(name: "background", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `backgroundLoign1`.
    var backgroundLoign1: RswiftResources.ImageResource { .init(name: "backgroundLoign1", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `backgroundLove`.
    var backgroundLove: RswiftResources.ImageResource { .init(name: "backgroundLove", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `bgr`.
    var bgr: RswiftResources.ImageResource { .init(name: "bgr", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `bgr4`.
    var bgr4: RswiftResources.ImageResource { .init(name: "bgr4", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `bgr5`.
    var bgr5: RswiftResources.ImageResource { .init(name: "bgr5", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `bgr6`.
    var bgr6: RswiftResources.ImageResource { .init(name: "bgr6", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `bgrS2I`.
    var bgrS2I: RswiftResources.ImageResource { .init(name: "bgrS2I", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `button`.
    var button: RswiftResources.ImageResource { .init(name: "button", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `cancel-icon`.
    var cancelIcon: RswiftResources.ImageResource { .init(name: "cancel-icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `close-button`.
    var closeButton: RswiftResources.ImageResource { .init(name: "close-button", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `count_comment`.
    var count_comment: RswiftResources.ImageResource { .init(name: "count_comment", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `count_view`.
    var count_view: RswiftResources.ImageResource { .init(name: "count_view", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `done-icon`.
    var doneIcon: RswiftResources.ImageResource { .init(name: "done-icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `downloadbutton-2`.
    var downloadbutton2: RswiftResources.ImageResource { .init(name: "downloadbutton-2", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `eva_swap-outline`.
    var eva_swapOutline: RswiftResources.ImageResource { .init(name: "eva_swap-outline", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `eye`.
    var eye: RswiftResources.ImageResource { .init(name: "eye", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `haicham`.
    var haicham: RswiftResources.ImageResource { .init(name: "haicham", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `hand-report`.
    var handReport: RswiftResources.ImageResource { .init(name: "hand-report", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `hoapro`.
    var hoapro: RswiftResources.ImageResource { .init(name: "hoapro", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `howto-1`.
    var howto1: RswiftResources.ImageResource { .init(name: "howto-1", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `howto-2`.
    var howto2: RswiftResources.ImageResource { .init(name: "howto-2", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `howto-3`.
    var howto3: RswiftResources.ImageResource { .init(name: "howto-3", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `howto-4`.
    var howto4: RswiftResources.ImageResource { .init(name: "howto-4", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `howto-5`.
    var howto5: RswiftResources.ImageResource { .init(name: "howto-5", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `howto-6`.
    var howto6: RswiftResources.ImageResource { .init(name: "howto-6", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `howto-icon`.
    var howtoIcon: RswiftResources.ImageResource { .init(name: "howto-icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon-upload`.
    var iconUpload: RswiftResources.ImageResource { .init(name: "icon-upload", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_canhbao`.
    var icon_canhbao: RswiftResources.ImageResource { .init(name: "icon_canhbao", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_send`.
    var icon_send: RswiftResources.ImageResource { .init(name: "icon_send", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icons8-share-50`.
    var icons8Share50: RswiftResources.ImageResource { .init(name: "icons8-share-50", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `install`.
    var install: RswiftResources.ImageResource { .init(name: "install", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `lineco`.
    var lineco: RswiftResources.ImageResource { .init(name: "lineco", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `link`.
    var link: RswiftResources.ImageResource { .init(name: "link", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `logo`.
    var logo: RswiftResources.ImageResource { .init(name: "logo", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `logo_love`.
    var logo_love: RswiftResources.ImageResource { .init(name: "logo_love", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `logohome`.
    var logohome: RswiftResources.ImageResource { .init(name: "logohome", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `loi-1`.
    var loi1: RswiftResources.ImageResource { .init(name: "loi-1", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `loi-2`.
    var loi2: RswiftResources.ImageResource { .init(name: "loi-2", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `loi-3`.
    var loi3: RswiftResources.ImageResource { .init(name: "loi-3", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `loi-4`.
    var loi4: RswiftResources.ImageResource { .init(name: "loi-4", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `loi-5`.
    var loi5: RswiftResources.ImageResource { .init(name: "loi-5", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `loi-6`.
    var loi6: RswiftResources.ImageResource { .init(name: "loi-6", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `loi-7`.
    var loi7: RswiftResources.ImageResource { .init(name: "loi-7", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `love_add`.
    var love_add: RswiftResources.ImageResource { .init(name: "love_add", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `love_boy`.
    var love_boy: RswiftResources.ImageResource { .init(name: "love_boy", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `love_boy2`.
    var love_boy2: RswiftResources.ImageResource { .init(name: "love_boy2", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `love_girl`.
    var love_girl: RswiftResources.ImageResource { .init(name: "love_girl", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `love_girl3`.
    var love_girl3: RswiftResources.ImageResource { .init(name: "love_girl3", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `love_left`.
    var love_left: RswiftResources.ImageResource { .init(name: "love_left", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `love_right`.
    var love_right: RswiftResources.ImageResource { .init(name: "love_right", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `love_start`.
    var love_start: RswiftResources.ImageResource { .init(name: "love_start", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `luonsong`.
    var luonsong: RswiftResources.ImageResource { .init(name: "luonsong", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `luonsong2`.
    var luonsong2: RswiftResources.ImageResource { .init(name: "luonsong2", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `menu`.
    var menu: RswiftResources.ImageResource { .init(name: "menu", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `menu-video`.
    var menuVideo: RswiftResources.ImageResource { .init(name: "menu-video", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `noavatar`.
    var noavatar: RswiftResources.ImageResource { .init(name: "noavatar", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `noimage`.
    var noimage: RswiftResources.ImageResource { .init(name: "noimage", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `play-100`.
    var play100: RswiftResources.ImageResource { .init(name: "play-100", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `privacy-icon`.
    var privacyIcon: RswiftResources.ImageResource { .init(name: "privacy-icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `remove-ry-icon`.
    var removeRyIcon: RswiftResources.ImageResource { .init(name: "remove-ry-icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `search`.
    var search: RswiftResources.ImageResource { .init(name: "search", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `send`.
    var send: RswiftResources.ImageResource { .init(name: "send", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `swap2image`.
    var swap2image: RswiftResources.ImageResource { .init(name: "swap2image", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `tab_comments`.
    var tab_comments: RswiftResources.ImageResource { .init(name: "tab_comments", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `tab_comments_tick`.
    var tab_comments_tick: RswiftResources.ImageResource { .init(name: "tab_comments_tick", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `tab_even_tick`.
    var tab_even_tick: RswiftResources.ImageResource { .init(name: "tab_even_tick", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `tab_event`.
    var tab_event: RswiftResources.ImageResource { .init(name: "tab_event", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `tab_home`.
    var tab_home: RswiftResources.ImageResource { .init(name: "tab_home", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `tab_home_tick`.
    var tab_home_tick: RswiftResources.ImageResource { .init(name: "tab_home_tick", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `tab_love`.
    var tab_love: RswiftResources.ImageResource { .init(name: "tab_love", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `tab_love_tick`.
    var tab_love_tick: RswiftResources.ImageResource { .init(name: "tab_love_tick", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `tab_video`.
    var tab_video: RswiftResources.ImageResource { .init(name: "tab_video", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `tab_video_tick`.
    var tab_video_tick: RswiftResources.ImageResource { .init(name: "tab_video_tick", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `template1`.
    var template1: RswiftResources.ImageResource { .init(name: "template1", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `template2`.
    var template2: RswiftResources.ImageResource { .init(name: "template2", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `template4`.
    var template4: RswiftResources.ImageResource { .init(name: "template4", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `user`.
    var user: RswiftResources.ImageResource { .init(name: "user", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `vector`.
    var vector: RswiftResources.ImageResource { .init(name: "vector", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }
  }

  /// This `_R.info` struct is generated, and contains static references to 1 properties.
  struct info {
    let bundle: Foundation.Bundle
    var uiApplicationSceneManifest: uiApplicationSceneManifest { .init(bundle: bundle) }

    func uiApplicationSceneManifest(bundle: Foundation.Bundle) -> uiApplicationSceneManifest {
      .init(bundle: bundle)
    }

    struct uiApplicationSceneManifest {
      let bundle: Foundation.Bundle

      let uiApplicationSupportsMultipleScenes: Bool = false

      var _key: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest"], key: "_key") ?? "UIApplicationSceneManifest" }
      var uiSceneConfigurations: uiSceneConfigurations { .init(bundle: bundle) }

      func uiSceneConfigurations(bundle: Foundation.Bundle) -> uiSceneConfigurations {
        .init(bundle: bundle)
      }

      struct uiSceneConfigurations {
        let bundle: Foundation.Bundle
        var _key: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest", "UISceneConfigurations"], key: "_key") ?? "UISceneConfigurations" }
        var uiWindowSceneSessionRoleApplication: uiWindowSceneSessionRoleApplication { .init(bundle: bundle) }

        func uiWindowSceneSessionRoleApplication(bundle: Foundation.Bundle) -> uiWindowSceneSessionRoleApplication {
          .init(bundle: bundle)
        }

        struct uiWindowSceneSessionRoleApplication {
          let bundle: Foundation.Bundle
          var defaultConfiguration: defaultConfiguration { .init(bundle: bundle) }

          func defaultConfiguration(bundle: Foundation.Bundle) -> defaultConfiguration {
            .init(bundle: bundle)
          }

          struct defaultConfiguration {
            let bundle: Foundation.Bundle
            var uiSceneConfigurationName: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest", "UISceneConfigurations", "UIWindowSceneSessionRoleApplication"], key: "UISceneConfigurationName") ?? "Default Configuration" }
            var uiSceneDelegateClassName: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest", "UISceneConfigurations", "UIWindowSceneSessionRoleApplication"], key: "UISceneDelegateClassName") ?? "$(PRODUCT_MODULE_NAME).SceneDelegate" }
          }
        }
      }
    }
  }

  /// This `_R.font` struct is generated, and contains static references to 9 fonts.
  struct font: Sequence {
    let bundle: Foundation.Bundle

    /// Font `RobotoSlab-Black`.
    var robotoSlabBlack: RswiftResources.FontResource { .init(name: "RobotoSlab-Black", bundle: bundle, filename: "RobotoSlab-Black.ttf") }

    /// Font `RobotoSlab-Bold`.
    var robotoSlabBold: RswiftResources.FontResource { .init(name: "RobotoSlab-Bold", bundle: bundle, filename: "RobotoSlab-Bold.ttf") }

    /// Font `RobotoSlab-ExtraBold`.
    var robotoSlabExtraBold: RswiftResources.FontResource { .init(name: "RobotoSlab-ExtraBold", bundle: bundle, filename: "RobotoSlab-ExtraBold.ttf") }

    /// Font `RobotoSlab-ExtraLight`.
    var robotoSlabExtraLight: RswiftResources.FontResource { .init(name: "RobotoSlab-ExtraLight", bundle: bundle, filename: "RobotoSlab-ExtraLight.ttf") }

    /// Font `RobotoSlab-Light`.
    var robotoSlabLight: RswiftResources.FontResource { .init(name: "RobotoSlab-Light", bundle: bundle, filename: "RobotoSlab-Light.ttf") }

    /// Font `RobotoSlab-Medium`.
    var robotoSlabMedium: RswiftResources.FontResource { .init(name: "RobotoSlab-Medium", bundle: bundle, filename: "RobotoSlab-Medium.ttf") }

    /// Font `RobotoSlab-Regular`.
    var robotoSlabRegular: RswiftResources.FontResource { .init(name: "RobotoSlab-Regular", bundle: bundle, filename: "RobotoSlab-Regular.ttf") }

    /// Font `RobotoSlab-SemiBold`.
    var robotoSlabSemiBold: RswiftResources.FontResource { .init(name: "RobotoSlab-SemiBold", bundle: bundle, filename: "RobotoSlab-SemiBold.ttf") }

    /// Font `RobotoSlab-Thin`.
    var robotoSlabThin: RswiftResources.FontResource { .init(name: "RobotoSlab-Thin", bundle: bundle, filename: "RobotoSlab-Thin.ttf") }

    func makeIterator() -> IndexingIterator<[RswiftResources.FontResource]> {
      [robotoSlabBlack, robotoSlabBold, robotoSlabExtraBold, robotoSlabExtraLight, robotoSlabLight, robotoSlabMedium, robotoSlabRegular, robotoSlabSemiBold, robotoSlabThin].makeIterator()
    }
    func validate() throws {
      for font in self {
        if !font.canBeLoaded() { throw RswiftResources.ValidationError("[R.swift] Font '\(font.name)' could not be loaded, is '\(font.filename)' added to the UIAppFonts array in this targets Info.plist?") }
      }
    }
  }

  /// This `_R.file` struct is generated, and contains static references to 13 resource files.
  struct file {
    let bundle: Foundation.Bundle

    /// Resource file `RobotoSlab-Black.ttf`.
    var robotoSlabBlackTtf: RswiftResources.FileResource { .init(name: "RobotoSlab-Black", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `RobotoSlab-Bold.ttf`.
    var robotoSlabBoldTtf: RswiftResources.FileResource { .init(name: "RobotoSlab-Bold", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `RobotoSlab-ExtraBold.ttf`.
    var robotoSlabExtraBoldTtf: RswiftResources.FileResource { .init(name: "RobotoSlab-ExtraBold", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `RobotoSlab-ExtraLight.ttf`.
    var robotoSlabExtraLightTtf: RswiftResources.FileResource { .init(name: "RobotoSlab-ExtraLight", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `RobotoSlab-Light.ttf`.
    var robotoSlabLightTtf: RswiftResources.FileResource { .init(name: "RobotoSlab-Light", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `RobotoSlab-Medium.ttf`.
    var robotoSlabMediumTtf: RswiftResources.FileResource { .init(name: "RobotoSlab-Medium", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `RobotoSlab-Regular.ttf`.
    var robotoSlabRegularTtf: RswiftResources.FileResource { .init(name: "RobotoSlab-Regular", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `RobotoSlab-SemiBold.ttf`.
    var robotoSlabSemiBoldTtf: RswiftResources.FileResource { .init(name: "RobotoSlab-SemiBold", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `RobotoSlab-Thin.ttf`.
    var robotoSlabThinTtf: RswiftResources.FileResource { .init(name: "RobotoSlab-Thin", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `background2.mp4`.
    var background2Mp4: RswiftResources.FileResource { .init(name: "background2", pathExtension: "mp4", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `bubble.mp3`.
    var bubbleMp3: RswiftResources.FileResource { .init(name: "bubble", pathExtension: "mp3", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `changeface.mp4`.
    var changefaceMp4: RswiftResources.FileResource { .init(name: "changeface", pathExtension: "mp4", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `swap-face.mp4`.
    var swapFaceMp4: RswiftResources.FileResource { .init(name: "swap-face", pathExtension: "mp4", bundle: bundle, locale: LocaleReference.none) }
  }

  /// This `_R.nib` struct is generated, and contains static references to 87 nibs.
  struct nib {
    let bundle: Foundation.Bundle

    /// Nib `Cell0`.
    var cell0: RswiftResources.NibReference<Cell0> { .init(name: "Cell0", bundle: bundle) }

    /// Nib `Cell1`.
    var cell1: RswiftResources.NibReference<Cell1> { .init(name: "Cell1", bundle: bundle) }

    /// Nib `Cell1Con1`.
    var cell1Con1: RswiftResources.NibReference<Cell1Con1> { .init(name: "Cell1Con1", bundle: bundle) }

    /// Nib `Cell1Con2`.
    var cell1Con2: RswiftResources.NibReference<Cell1Con2> { .init(name: "Cell1Con2", bundle: bundle) }

    /// Nib `Cell2`.
    var cell2: RswiftResources.NibReference<Cell2> { .init(name: "Cell2", bundle: bundle) }

    /// Nib `Cell2Con1`.
    var cell2Con1: RswiftResources.NibReference<Cell2Con1> { .init(name: "Cell2Con1", bundle: bundle) }

    /// Nib `Cell2Con2`.
    var cell2Con2: RswiftResources.NibReference<Cell2Con2> { .init(name: "Cell2Con2", bundle: bundle) }

    /// Nib `Cell3`.
    var cell3: RswiftResources.NibReference<Cell3> { .init(name: "Cell3", bundle: bundle) }

    /// Nib `Cell3Con1`.
    var cell3Con1: RswiftResources.NibReference<Cell3Con1> { .init(name: "Cell3Con1", bundle: bundle) }

    /// Nib `Cell3Con2`.
    var cell3Con2: RswiftResources.NibReference<Cell3Con2> { .init(name: "Cell3Con2", bundle: bundle) }

    /// Nib `Cell4`.
    var cell4: RswiftResources.NibReference<Cell4> { .init(name: "Cell4", bundle: bundle) }

    /// Nib `Cell4Con1`.
    var cell4Con1: RswiftResources.NibReference<Cell4Con1> { .init(name: "Cell4Con1", bundle: bundle) }

    /// Nib `Cell4Con2`.
    var cell4Con2: RswiftResources.NibReference<Cell4Con2> { .init(name: "Cell4Con2", bundle: bundle) }

    /// Nib `Cell5`.
    var cell5: RswiftResources.NibReference<Cell5> { .init(name: "Cell5", bundle: bundle) }

    /// Nib `Cell5Con1`.
    var cell5Con1: RswiftResources.NibReference<Cell5Con1> { .init(name: "Cell5Con1", bundle: bundle) }

    /// Nib `Cell5Con2`.
    var cell5Con2: RswiftResources.NibReference<Cell5Con2> { .init(name: "Cell5Con2", bundle: bundle) }

    /// Nib `Cell6`.
    var cell6: RswiftResources.NibReference<Cell6> { .init(name: "Cell6", bundle: bundle) }

    /// Nib `Cell6Con1`.
    var cell6Con1: RswiftResources.NibReference<Cell6Con1> { .init(name: "Cell6Con1", bundle: bundle) }

    /// Nib `Cell6Con2`.
    var cell6Con2: RswiftResources.NibReference<Cell6Con2> { .init(name: "Cell6Con2", bundle: bundle) }

    /// Nib `Cell7`.
    var cell7: RswiftResources.NibReference<Cell7> { .init(name: "Cell7", bundle: bundle) }

    /// Nib `Cell7Con1`.
    var cell7Con1: RswiftResources.NibReference<Cell7Con1> { .init(name: "Cell7Con1", bundle: bundle) }

    /// Nib `Cell7Con2`.
    var cell7Con2: RswiftResources.NibReference<Cell7Con2> { .init(name: "Cell7Con2", bundle: bundle) }

    /// Nib `Cell7Con3`.
    var cell7Con3: RswiftResources.NibReference<Cell7Con3> { .init(name: "Cell7Con3", bundle: bundle) }

    /// Nib `Cell7Con4`.
    var cell7Con4: RswiftResources.NibReference<Cell7Con4> { .init(name: "Cell7Con4", bundle: bundle) }

    /// Nib `Cell8`.
    var cell8: RswiftResources.NibReference<Cell8> { .init(name: "Cell8", bundle: bundle) }

    /// Nib `Cell8Con1`.
    var cell8Con1: RswiftResources.NibReference<Cell8Con1> { .init(name: "Cell8Con1", bundle: bundle) }

    /// Nib `Cell8Con2`.
    var cell8Con2: RswiftResources.NibReference<Cell8Con2> { .init(name: "Cell8Con2", bundle: bundle) }

    /// Nib `Cell9`.
    var cell9: RswiftResources.NibReference<Cell9> { .init(name: "Cell9", bundle: bundle) }

    /// Nib `Cell9Con1`.
    var cell9Con1: RswiftResources.NibReference<Cell9Con1> { .init(name: "Cell9Con1", bundle: bundle) }

    /// Nib `CellFirst`.
    var cellFirst: RswiftResources.NibReference<CellFirst> { .init(name: "CellFirst", bundle: bundle) }

    /// Nib `CellSwap1`.
    var cellSwap1: RswiftResources.NibReference<FutureLove.CellSwap1> { .init(name: "CellSwap1", bundle: bundle) }

    /// Nib `CellSwap2`.
    var cellSwap2: RswiftResources.NibReference<CellSwap2> { .init(name: "CellSwap2", bundle: bundle) }

    /// Nib `CellSwap3`.
    var cellSwap3: RswiftResources.NibReference<FutureLove.CellSwap3> { .init(name: "CellSwap3", bundle: bundle) }

    /// Nib `CellSwapController`.
    var cellSwapController: RswiftResources.NibReference<CellSwapController> { .init(name: "CellSwapController", bundle: bundle) }

    /// Nib `ChangerAvatarViewController`.
    var changerAvatarViewController: RswiftResources.NibReference<UIKit.UIView> { .init(name: "ChangerAvatarViewController", bundle: bundle) }

    /// Nib `CommentTableViewCell`.
    var commentTableViewCell: RswiftResources.NibReference<CommentTableViewCell> { .init(name: "CommentTableViewCell", bundle: bundle) }

    /// Nib `CommentsViewController`.
    var commentsViewController: RswiftResources.NibReference<UIKit.UIView> { .init(name: "CommentsViewController", bundle: bundle) }

    /// Nib `DetailCommentTableViewCell`.
    var detailCommentTableViewCell: RswiftResources.NibReference<DetailCommentTableViewCell> { .init(name: "DetailCommentTableViewCell", bundle: bundle) }

    /// Nib `DetailEventsViewController`.
    var detailEventsViewController: RswiftResources.NibReference<UIKit.UIView> { .init(name: "DetailEventsViewController", bundle: bundle) }

    /// Nib `DetailHowToVC`.
    var detailHowToVC: RswiftResources.NibReference<UIKit.UIView> { .init(name: "DetailHowToVC", bundle: bundle) }

    /// Nib `DetailSwapVideoVC`.
    var detailSwapVideoVC: RswiftResources.NibReference<UIKit.UIView> { .init(name: "DetailSwapVideoVC", bundle: bundle) }

    /// Nib `EventViewController`.
    var eventViewController: RswiftResources.NibReference<UIKit.UIView> { .init(name: "EventViewController", bundle: bundle) }

    /// Nib `FogotPassViewController`.
    var fogotPassViewController: RswiftResources.NibReference<UIKit.UIView> { .init(name: "FogotPassViewController", bundle: bundle) }

    /// Nib `HeaderView`.
    var headerView: RswiftResources.NibReference<UIKit.UIView> { .init(name: "HeaderView", bundle: bundle) }

    /// Nib `HomeViewController`.
    var homeViewController: RswiftResources.NibReference<UIKit.UIView> { .init(name: "HomeViewController", bundle: bundle) }

    /// Nib `HowToCLVCell`.
    var howToCLVCell: RswiftResources.NibReference<HowToCLVCell> { .init(name: "HowToCLVCell", bundle: bundle) }

    /// Nib `HowToUseVC`.
    var howToUseVC: RswiftResources.NibReference<UIKit.UIView> { .init(name: "HowToUseVC", bundle: bundle) }

    /// Nib `ImagesGocTBVCell`.
    var imagesGocTBVCell: RswiftResources.NibReference<ImagesGocTBVCell> { .init(name: "ImagesGocTBVCell", bundle: bundle) }

    /// Nib `InputPasswordVC`.
    var inputPasswordVC: RswiftResources.NibReference<UIKit.UIView> { .init(name: "InputPasswordVC", bundle: bundle) }

    /// Nib `ListAccountCollectionViewCell`.
    var listAccountCollectionViewCell: RswiftResources.NibReference<ListAccountCollectionViewCell> { .init(name: "ListAccountCollectionViewCell", bundle: bundle) }

    /// Nib `ListAccountVC`.
    var listAccountVC: RswiftResources.NibReference<UIKit.UIView> { .init(name: "ListAccountVC", bundle: bundle) }

    /// Nib `ListImageCLVCell`.
    var listImageCLVCell: RswiftResources.NibReference<ListImageCLVCell> { .init(name: "ListImageCLVCell", bundle: bundle) }

    /// Nib `ListImageOldVC`.
    var listImageOldVC: RswiftResources.NibReference<UIKit.UIView> { .init(name: "ListImageOldVC", bundle: bundle) }

    /// Nib `ListSelectSwapVideoVC`.
    var listSelectSwapVideoVC: RswiftResources.NibReference<UIKit.UIView> { .init(name: "ListSelectSwapVideoVC", bundle: bundle) }

    /// Nib `ListSwapResultVC`.
    var listSwapResultVC: RswiftResources.NibReference<UIKit.UIView> { .init(name: "ListSwapResultVC", bundle: bundle) }

    /// Nib `LoginViewController`.
    var loginViewController: RswiftResources.NibReference<UIKit.UIView> { .init(name: "LoginViewController", bundle: bundle) }

    /// Nib `LoveViewController`.
    var loveViewController: RswiftResources.NibReference<UIKit.UIView> { .init(name: "LoveViewController", bundle: bundle) }

    /// Nib `PageHomeCLVCell`.
    var pageHomeCLVCell: RswiftResources.NibReference<PageHomeCLVCell> { .init(name: "PageHomeCLVCell", bundle: bundle) }

    /// Nib `PrivacyMainVC`.
    var privacyMainVC: RswiftResources.NibReference<UIKit.UIView> { .init(name: "PrivacyMainVC", bundle: bundle) }

    /// Nib `ProfileViewController`.
    var profileViewController: RswiftResources.NibReference<UIKit.UIView> { .init(name: "ProfileViewController", bundle: bundle) }

    /// Nib `RecentCommentTableViewCell`.
    var recentCommentTableViewCell: RswiftResources.NibReference<RecentCommentTableViewCell> { .init(name: "RecentCommentTableViewCell", bundle: bundle) }

    /// Nib `RegisterViewController`.
    var registerViewController: RswiftResources.NibReference<UIKit.UIView> { .init(name: "RegisterViewController", bundle: bundle) }

    /// Nib `ReportCommentVC`.
    var reportCommentVC: RswiftResources.NibReference<UIKit.UIView> { .init(name: "ReportCommentVC", bundle: bundle) }

    /// Nib `SearchViewController`.
    var searchViewController: RswiftResources.NibReference<UIKit.UIView> { .init(name: "SearchViewController", bundle: bundle) }

    /// Nib `SKLoveCell1`.
    var skLoveCell1: RswiftResources.NibReference<SKLoveCell1> { .init(name: "SKLoveCell1", bundle: bundle) }

    /// Nib `SKLoveCell2`.
    var skLoveCell2: RswiftResources.NibReference<SKLoveCell2> { .init(name: "SKLoveCell2", bundle: bundle) }

    /// Nib `SKLoveVC`.
    var skLoveVC: RswiftResources.NibReference<UIKit.UIView> { .init(name: "SKLoveVC", bundle: bundle) }

    /// Nib `SKLoveViewController`.
    var skLoveViewController: RswiftResources.NibReference<UIKit.UIView> { .init(name: "SKLoveViewController", bundle: bundle) }

    /// Nib `SlideMenuTableViewCell`.
    var slideMenuTableViewCell: RswiftResources.NibReference<SlideMenuTableViewCell> { .init(name: "SlideMenuTableViewCell", bundle: bundle) }

    /// Nib `SlideMenuViewController`.
    var slideMenuViewController: RswiftResources.NibReference<UIKit.UIView> { .init(name: "SlideMenuViewController", bundle: bundle) }

    /// Nib `StartViewController`.
    var startViewController: RswiftResources.NibReference<UIKit.UIView> { .init(name: "StartViewController", bundle: bundle) }

    /// Nib `Swap2ImageVC`.
    var swap2ImageVC: RswiftResources.NibReference<UIKit.UIView> { .init(name: "Swap2ImageVC", bundle: bundle) }

    /// Nib `SwapImageImageVC`.
    var swapImageImageVC: RswiftResources.NibReference<UIKit.UIView> { .init(name: "SwapImageImageVC", bundle: bundle) }

    /// Nib `SwapImageVideoUploadVC`.
    var swapImageVideoUploadVC: RswiftResources.NibReference<UIKit.UIView> { .init(name: "SwapImageVideoUploadVC", bundle: bundle) }

    /// Nib `SwapImage_VideoTemplateCell`.
    var swapImage_VideoTemplateCell: RswiftResources.NibReference<SwapImage_VideoTemplateCell> { .init(name: "SwapImage_VideoTemplateCell", bundle: bundle) }

    /// Nib `SwapImage_VideoTemplateVC`.
    var swapImage_VideoTemplateVC: RswiftResources.NibReference<UIKit.UIView> { .init(name: "SwapImage_VideoTemplateVC", bundle: bundle) }

    /// Nib `SwapVideoDetailVC`.
    var swapVideoDetailVC: RswiftResources.NibReference<UIKit.UIView> { .init(name: "SwapVideoDetailVC", bundle: bundle) }

    /// Nib `Template1TBVCell`.
    var template1TBVCell: RswiftResources.NibReference<Template1TBVCell> { .init(name: "Template1TBVCell", bundle: bundle) }

    /// Nib `Template2TBVCell`.
    var template2TBVCell: RswiftResources.NibReference<Template2TBVCell> { .init(name: "Template2TBVCell", bundle: bundle) }

    /// Nib `Template3TBVCell`.
    var template3TBVCell: RswiftResources.NibReference<Template3TBVCell> { .init(name: "Template3TBVCell", bundle: bundle) }

    /// Nib `Template4TBVCell`.
    var template4TBVCell: RswiftResources.NibReference<Template4TBVCell> { .init(name: "Template4TBVCell", bundle: bundle) }

    /// Nib `UserEventViewController`.
    var userEventViewController: RswiftResources.NibReference<UIKit.UIView> { .init(name: "UserEventViewController", bundle: bundle) }

    /// Nib `UserSearchTBVCell`.
    var userSearchTBVCell: RswiftResources.NibReference<UserSearchTBVCell> { .init(name: "UserSearchTBVCell", bundle: bundle) }

    /// Nib `VideoCollectionViewCell`.
    var videoCollectionViewCell: RswiftResources.NibReference<VideoCollectionViewCell> { .init(name: "VideoCollectionViewCell", bundle: bundle) }

    /// Nib `videoItemCLVCell`.
    var videoItemCLVCell: RswiftResources.NibReference<videoItemCLVCell> { .init(name: "videoItemCLVCell", bundle: bundle) }

    /// Nib `VideoListVC`.
    var videoListVC: RswiftResources.NibReference<UIKit.UIView> { .init(name: "VideoListVC", bundle: bundle) }

    /// Nib `VideoTemplateCLVCell`.
    var videoTemplateCLVCell: RswiftResources.NibReference<VideoTemplateCLVCell> { .init(name: "VideoTemplateCLVCell", bundle: bundle) }

    func validate() throws {
      if UIKit.UIImage(named: "logohome", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'logohome' is used in nib 'Cell0', but couldn't be loaded.") }
      if UIKit.UIImage(named: "vector", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'vector' is used in nib 'Cell0', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Untitled-1 1", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Untitled-1 1' is used in nib 'Cell1Con1', but couldn't be loaded.") }
      if UIKit.UIImage(named: "LET'S ANALYZE YOUR LOVE WITH ARTIFICIAL INTELLIGENCE", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'LET'S ANALYZE YOUR LOVE WITH ARTIFICIAL INTELLIGENCE' is used in nib 'Cell1Con2', but couldn't be loaded.") }
      if UIKit.UIImage(named: "START", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'START' is used in nib 'Cell1Con2', but couldn't be loaded.") }
      if UIKit.UIImage(named: "WHAT WILL YOUR LOVE BE LIKE IN THE FUTURE _", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'WHAT WILL YOUR LOVE BE LIKE IN THE FUTURE _' is used in nib 'Cell1Con2', but couldn't be loaded.") }
      if UIKit.UIImage(named: "button", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'button' is used in nib 'Cell1Con2', but couldn't be loaded.") }
      if UIKit.UIImage(named: "bgr", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'bgr' is used in nib 'Cell2Con1', but couldn't be loaded.") }
      if UIKit.UIImage(named: "ARE YOU IN LOVE OR ARE YOU MARRIED_ WHAT WILL YOUR CHILDREN LOOK LIKE_", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'ARE YOU IN LOVE OR ARE YOU MARRIED_ WHAT WILL YOUR CHILDREN LOOK LIKE_' is used in nib 'Cell2Con2', but couldn't be loaded.") }
      if UIKit.UIImage(named: "CLICK NOW BUT LOOK YOUR CHILD IN THE FUTURE", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'CLICK NOW BUT LOOK YOUR CHILD IN THE FUTURE' is used in nib 'Cell2Con2', but couldn't be loaded.") }
      if UIKit.UIImage(named: "START", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'START' is used in nib 'Cell2Con2', but couldn't be loaded.") }
      if UIKit.UIImage(named: "button", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'button' is used in nib 'Cell2Con2', but couldn't be loaded.") }
      if UIKit.UIImage(named: "bgrS2I", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'bgrS2I' is used in nib 'Cell3Con1', but couldn't be loaded.") }
      if UIKit.UIImage(named: "START", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'START' is used in nib 'Cell3Con2', but couldn't be loaded.") }
      if UIKit.UIImage(named: "button", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'button' is used in nib 'Cell3Con2', but couldn't be loaded.") }
      if UIKit.UIImage(named: "install", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'install' is used in nib 'Cell3Con2', but couldn't be loaded.") }
      if UIKit.UIImage(named: "swap2image", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'swap2image' is used in nib 'Cell3Con2', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Rectangle 4970", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Rectangle 4970' is used in nib 'Cell4Con1', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Rectangle 4971", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Rectangle 4971' is used in nib 'Cell4Con1', but couldn't be loaded.") }
      if UIKit.UIImage(named: "bgr4", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'bgr4' is used in nib 'Cell4Con1', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Have more 200 template, change your mind now with unique videos", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Have more 200 template, change your mind now with unique videos' is used in nib 'Cell4Con2', but couldn't be loaded.") }
      if UIKit.UIImage(named: "START", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'START' is used in nib 'Cell4Con2', but couldn't be loaded.") }
      if UIKit.UIImage(named: "SWAP ONE IMAGE WITH TEMPLATE", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'SWAP ONE IMAGE WITH TEMPLATE' is used in nib 'Cell4Con2', but couldn't be loaded.") }
      if UIKit.UIImage(named: "button", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'button' is used in nib 'Cell4Con2', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Rectangle 4970", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Rectangle 4970' is used in nib 'Cell5Con1', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Rectangle 4971", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Rectangle 4971' is used in nib 'Cell5Con1', but couldn't be loaded.") }
      if UIKit.UIImage(named: "bgr5", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'bgr5' is used in nib 'Cell5Con1', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Convert two videos posted from you", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Convert two videos posted from you' is used in nib 'Cell5Con2', but couldn't be loaded.") }
      if UIKit.UIImage(named: "START", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'START' is used in nib 'Cell5Con2', but couldn't be loaded.") }
      if UIKit.UIImage(named: "SWAP IMAgE WITH VIDEO", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'SWAP IMAgE WITH VIDEO' is used in nib 'Cell5Con2', but couldn't be loaded.") }
      if UIKit.UIImage(named: "button", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'button' is used in nib 'Cell5Con2', but couldn't be loaded.") }
      if UIKit.UIImage(named: "bgr6", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'bgr6' is used in nib 'Cell6Con1', but couldn't be loaded.") }
      if UIKit.UIImage(named: "START", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'START' is used in nib 'Cell6Con2', but couldn't be loaded.") }
      if UIKit.UIImage(named: "SWAP ONE IMAGE WITH VIDEO TEMPALE", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'SWAP ONE IMAGE WITH VIDEO TEMPALE' is used in nib 'Cell6Con2', but couldn't be loaded.") }
      if UIKit.UIImage(named: "What will your face if in the video but you want", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'What will your face if in the video but you want' is used in nib 'Cell6Con2', but couldn't be loaded.") }
      if UIKit.UIImage(named: "button", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'button' is used in nib 'Cell6Con2', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Rectangle 59", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Rectangle 59' is used in nib 'Cell7Con1', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Rectangle 60", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Rectangle 60' is used in nib 'Cell7Con2', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Rectangle 59", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Rectangle 59' is used in nib 'Cell7Con3', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Rectangle 60", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Rectangle 60' is used in nib 'Cell7Con4', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Designer (1) 2", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Designer (1) 2' is used in nib 'Cell8Con1', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Rectangle 22", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Rectangle 22' is used in nib 'Cell8Con1', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Confirm password", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Confirm password' is used in nib 'Cell8Con2', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Log in", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Log in' is used in nib 'Cell8Con2', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Rectangle 61", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Rectangle 61' is used in nib 'Cell8Con2', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Rectangle 62", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Rectangle 62' is used in nib 'Cell8Con2', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Rectangle 63", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Rectangle 63' is used in nib 'Cell8Con2', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Rectangle 64", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Rectangle 64' is used in nib 'Cell9Con1', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Tinder’s new $500 feature gives the green light to harassment – if you can afford it", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Tinder’s new $500 feature gives the green light to harassment – if you can afford it' is used in nib 'Cell9Con1', but couldn't be loaded.") }
      if UIKit.UIImage(named: "logohome", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'logohome' is used in nib 'CellFirst', but couldn't be loaded.") }
      if UIKit.UIImage(named: "vector", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'vector' is used in nib 'CellFirst', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Swap Video", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Swap Video' is used in nib 'CellSwap1', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Choose Your Image", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Choose Your Image' is used in nib 'CellSwap2', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Ellipse 209", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Ellipse 209' is used in nib 'CellSwap2', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Frame 48097905", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Frame 48097905' is used in nib 'CellSwap2', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Rectangle 5046", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Rectangle 5046' is used in nib 'CellSwap2', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Rectangle 5047", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Rectangle 5047' is used in nib 'CellSwap2', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Rectangle 5048", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Rectangle 5048' is used in nib 'CellSwap2', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Video Template", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Video Template' is used in nib 'CellSwap2', but couldn't be loaded.") }
      if UIKit.UIImage(named: "button", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'button' is used in nib 'CellSwap2', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Success. Here is your video!", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Success. Here is your video!' is used in nib 'CellSwap3', but couldn't be loaded.") }
      if UIKit.UIImage(named: "search", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'search' is used in nib 'CommentsViewController', but couldn't be loaded.") }
      if UIKit.UIImage(named: "hand-report", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'hand-report' is used in nib 'DetailCommentTableViewCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "remove-ry-icon", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'remove-ry-icon' is used in nib 'DetailCommentTableViewCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "back", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'back' is used in nib 'DetailEventsViewController', but couldn't be loaded.") }
      if UIKit.UIImage(named: "count_comment", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'count_comment' is used in nib 'DetailEventsViewController', but couldn't be loaded.") }
      if UIKit.UIImage(named: "count_view", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'count_view' is used in nib 'DetailEventsViewController', but couldn't be loaded.") }
      if UIKit.UIImage(named: "logo", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'logo' is used in nib 'DetailEventsViewController', but couldn't be loaded.") }
      if UIKit.UIImage(named: "send", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'send' is used in nib 'DetailEventsViewController', but couldn't be loaded.") }
      if UIKit.UIImage(named: "template1", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'template1' is used in nib 'DetailEventsViewController', but couldn't be loaded.") }
      if UIKit.UIImage(named: "back", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'back' is used in nib 'DetailHowToVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "back", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'back' is used in nib 'DetailSwapVideoVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "downloadbutton-2", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'downloadbutton-2' is used in nib 'DetailSwapVideoVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "icons8-share-50", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'icons8-share-50' is used in nib 'DetailSwapVideoVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "back", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'back' is used in nib 'EventViewController', but couldn't be loaded.") }
      if UIKit.UIImage(named: "link", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'link' is used in nib 'EventViewController', but couldn't be loaded.") }
      if UIKit.UIImage(named: "menu", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'menu' is used in nib 'EventViewController', but couldn't be loaded.") }
      if UIKit.UIImage(named: "search", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'search' is used in nib 'EventViewController', but couldn't be loaded.") }
      if UIKit.UIImage(named: "back", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'back' is used in nib 'FogotPassViewController', but couldn't be loaded.") }
      if UIKit.UIImage(named: "backgroudLogin", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'backgroudLogin' is used in nib 'FogotPassViewController', but couldn't be loaded.") }
      if UIKit.UIColor(named: "mainOrange", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'mainOrange' is used in nib 'FogotPassViewController', but couldn't be loaded.") }
      if UIKit.UIImage(named: "background", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'background' is used in nib 'HeaderView', but couldn't be loaded.") }
      if UIKit.UIImage(named: "noavatar", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'noavatar' is used in nib 'HomeViewController', but couldn't be loaded.") }
      if UIKit.UIImage(named: "search", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'search' is used in nib 'HomeViewController', but couldn't be loaded.") }
      if UIKit.UIImage(named: "back", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'back' is used in nib 'HowToUseVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "cancel-icon", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'cancel-icon' is used in nib 'HowToUseVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "done-icon", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'done-icon' is used in nib 'HowToUseVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "luonsong", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'luonsong' is used in nib 'HowToUseVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "luonsong2", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'luonsong2' is used in nib 'HowToUseVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "template2", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'template2' is used in nib 'ImagesGocTBVCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "close-button", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'close-button' is used in nib 'InputPasswordVC', but couldn't be loaded.") }
      if UIKit.UIColor(named: "mainOrange", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'mainOrange' is used in nib 'ListAccountCollectionViewCell', but couldn't be loaded.") }
      if UIKit.UIColor(named: "mainOrange", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'mainOrange' is used in nib 'ListImageCLVCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "back", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'back' is used in nib 'ListImageOldVC', but couldn't be loaded.") }
      if UIKit.UIColor(named: "AccentColor", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'AccentColor' is used in nib 'ListImageOldVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "menu-video", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'menu-video' is used in nib 'ListSelectSwapVideoVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "noavatar", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'noavatar' is used in nib 'ListSelectSwapVideoVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "back", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'back' is used in nib 'ListSwapResultVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "backgroudLogin", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'backgroudLogin' is used in nib 'LoginViewController', but couldn't be loaded.") }
      if UIKit.UIImage(named: "eye", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'eye' is used in nib 'LoginViewController', but couldn't be loaded.") }
      if UIKit.UIImage(named: "love_left", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'love_left' is used in nib 'LoginViewController', but couldn't be loaded.") }
      if UIKit.UIImage(named: "love_right", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'love_right' is used in nib 'LoginViewController', but couldn't be loaded.") }
      if UIKit.UIColor(named: "mainOrange", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'mainOrange' is used in nib 'LoginViewController', but couldn't be loaded.") }
      if UIKit.UIImage(named: "howto-icon", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'howto-icon' is used in nib 'LoveViewController', but couldn't be loaded.") }
      if UIKit.UIImage(named: "love_add", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'love_add' is used in nib 'LoveViewController', but couldn't be loaded.") }
      if UIKit.UIImage(named: "love_boy", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'love_boy' is used in nib 'LoveViewController', but couldn't be loaded.") }
      if UIKit.UIImage(named: "love_boy2", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'love_boy2' is used in nib 'LoveViewController', but couldn't be loaded.") }
      if UIKit.UIImage(named: "love_girl", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'love_girl' is used in nib 'LoveViewController', but couldn't be loaded.") }
      if UIKit.UIImage(named: "love_girl3", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'love_girl3' is used in nib 'LoveViewController', but couldn't be loaded.") }
      if UIKit.UIImage(named: "love_start", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'love_start' is used in nib 'LoveViewController', but couldn't be loaded.") }
      if UIKit.UIImage(named: "luonsong", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'luonsong' is used in nib 'LoveViewController', but couldn't be loaded.") }
      if UIKit.UIImage(named: "luonsong2", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'luonsong2' is used in nib 'LoveViewController', but couldn't be loaded.") }
      if UIKit.UIImage(named: "privacy-icon", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'privacy-icon' is used in nib 'LoveViewController', but couldn't be loaded.") }
      if UIKit.UIImage(named: "back", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'back' is used in nib 'PrivacyMainVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "icon_canhbao", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'icon_canhbao' is used in nib 'ProfileViewController', but couldn't be loaded.") }
      if UIKit.UIImage(named: "search", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'search' is used in nib 'ProfileViewController', but couldn't be loaded.") }
      if UIKit.UIColor(named: "mainOrange", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'mainOrange' is used in nib 'ProfileViewController', but couldn't be loaded.") }
      if UIKit.UIImage(named: "backgroudLogin", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'backgroudLogin' is used in nib 'RegisterViewController', but couldn't be loaded.") }
      if UIKit.UIImage(named: "eye", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'eye' is used in nib 'RegisterViewController', but couldn't be loaded.") }
      if UIKit.UIImage(named: "love_add", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'love_add' is used in nib 'RegisterViewController', but couldn't be loaded.") }
      if UIKit.UIImage(named: "love_left", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'love_left' is used in nib 'RegisterViewController', but couldn't be loaded.") }
      if UIKit.UIImage(named: "love_right", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'love_right' is used in nib 'RegisterViewController', but couldn't be loaded.") }
      if UIKit.UIImage(named: "back", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'back' is used in nib 'ReportCommentVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "luonsong", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'luonsong' is used in nib 'ReportCommentVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "luonsong2", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'luonsong2' is used in nib 'ReportCommentVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "logohome", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'logohome' is used in nib 'SKLoveCell1', but couldn't be loaded.") }
      if UIKit.UIImage(named: "vector", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'vector' is used in nib 'SKLoveCell1', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Ellipse 24", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Ellipse 24' is used in nib 'SKLoveCell2', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Ellipse 25", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Ellipse 25' is used in nib 'SKLoveCell2', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Frame 48097542", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Frame 48097542' is used in nib 'SKLoveCell2', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Frame 48097545", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Frame 48097545' is used in nib 'SKLoveCell2', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Frame 48097546", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Frame 48097546' is used in nib 'SKLoveCell2', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Plus_Icon_UIA", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Plus_Icon_UIA' is used in nib 'SKLoveCell2', but couldn't be loaded.") }
      if UIKit.UIImage(named: "button", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'button' is used in nib 'SKLoveCell2', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Ellipse 24", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Ellipse 24' is used in nib 'SKLoveVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Ellipse 25", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Ellipse 25' is used in nib 'SKLoveVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Frame 48097542", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Frame 48097542' is used in nib 'SKLoveVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Frame 48097545", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Frame 48097545' is used in nib 'SKLoveVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Frame 48097546", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Frame 48097546' is used in nib 'SKLoveVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Plus_Icon_UIA", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Plus_Icon_UIA' is used in nib 'SKLoveVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "button", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'button' is used in nib 'SKLoveVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "logohome", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'logohome' is used in nib 'SKLoveVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "vector", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'vector' is used in nib 'SKLoveVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "back", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'back' is used in nib 'SearchViewController', but couldn't be loaded.") }
      if UIKit.UIImage(named: "backgroudLogin", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'backgroudLogin' is used in nib 'StartViewController', but couldn't be loaded.") }
      if UIKit.UIImage(named: "backgroundLoign1", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'backgroundLoign1' is used in nib 'StartViewController', but couldn't be loaded.") }
      if UIKit.UIImage(named: "luonsong", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'luonsong' is used in nib 'StartViewController', but couldn't be loaded.") }
      if UIKit.UIImage(named: "luonsong2", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'luonsong2' is used in nib 'StartViewController', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Frame 48097939", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Frame 48097939' is used in nib 'SwapImageImageVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Image", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Image' is used in nib 'SwapImageImageVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Image (1)", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Image (1)' is used in nib 'SwapImageImageVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Image (2)", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Image (2)' is used in nib 'SwapImageImageVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Rectangle 5089", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Rectangle 5089' is used in nib 'SwapImageImageVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Rectangle 5093", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Rectangle 5093' is used in nib 'SwapImageImageVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Rectangle 5094", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Rectangle 5094' is used in nib 'SwapImageImageVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Your Image", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Your Image' is used in nib 'SwapImageImageVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Your Image 2", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Your Image 2' is used in nib 'SwapImageImageVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "eva_swap-outline", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'eva_swap-outline' is used in nib 'SwapImageImageVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "logohome", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'logohome' is used in nib 'SwapImageImageVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "vector", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'vector' is used in nib 'SwapImageImageVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Frame 48097939", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Frame 48097939' is used in nib 'SwapImageVideoUploadVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Image", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Image' is used in nib 'SwapImageVideoUploadVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Image (1)", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Image (1)' is used in nib 'SwapImageVideoUploadVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Image (2)", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Image (2)' is used in nib 'SwapImageVideoUploadVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Rectangle 5089", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Rectangle 5089' is used in nib 'SwapImageVideoUploadVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Rectangle 5093", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Rectangle 5093' is used in nib 'SwapImageVideoUploadVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Rectangle 5094", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Rectangle 5094' is used in nib 'SwapImageVideoUploadVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Your Image", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Your Image' is used in nib 'SwapImageVideoUploadVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Your Video", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Your Video' is used in nib 'SwapImageVideoUploadVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "eva_swap-outline", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'eva_swap-outline' is used in nib 'SwapImageVideoUploadVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "logohome", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'logohome' is used in nib 'SwapImageVideoUploadVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "vector", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'vector' is used in nib 'SwapImageVideoUploadVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "back", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'back' is used in nib 'SwapVideoDetailVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "love_add", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'love_add' is used in nib 'SwapVideoDetailVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "love_boy", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'love_boy' is used in nib 'SwapVideoDetailVC', but couldn't be loaded.") }
      if UIKit.UIImage(named: "count_comment", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'count_comment' is used in nib 'Template1TBVCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "count_view", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'count_view' is used in nib 'Template1TBVCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "logo", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'logo' is used in nib 'Template1TBVCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "template1", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'template1' is used in nib 'Template1TBVCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "count_comment", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'count_comment' is used in nib 'Template2TBVCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "count_view", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'count_view' is used in nib 'Template2TBVCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "template2", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'template2' is used in nib 'Template2TBVCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "Template3", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Template3' is used in nib 'Template3TBVCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "count_comment", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'count_comment' is used in nib 'Template3TBVCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "count_view", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'count_view' is used in nib 'Template3TBVCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "logo", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'logo' is used in nib 'Template3TBVCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "count_comment", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'count_comment' is used in nib 'Template4TBVCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "count_view", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'count_view' is used in nib 'Template4TBVCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "template4", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'template4' is used in nib 'Template4TBVCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "back", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'back' is used in nib 'UserEventViewController', but couldn't be loaded.") }
    }
  }

  /// This `_R.storyboard` struct is generated, and contains static references to 1 storyboards.
  struct storyboard {
    let bundle: Foundation.Bundle
    var launchScreen: launchScreen { .init(bundle: bundle) }

    func launchScreen(bundle: Foundation.Bundle) -> launchScreen {
      .init(bundle: bundle)
    }
    func validate() throws {
      try self.launchScreen.validate()
    }


    /// Storyboard `LaunchScreen`.
    struct launchScreen: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = UIKit.UIViewController

      let bundle: Foundation.Bundle

      let name = "LaunchScreen"
      func validate() throws {

      }
    }
  }
}